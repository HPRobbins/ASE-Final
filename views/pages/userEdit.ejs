<!DOCTYPE html>
<html>
<head>
    <%- include('../partials/head') %>
</head>

<header>
   <%- include('../partials/header') %>
</header>
<<<<<<< HEAD
<body style="background-color: #FF9566;">
<h1>User Edit</h1>
<button class="btn btn-light btn-outline-dark"><a href="/userDetail/<%= user.userID %>">Back to User Detail</a></button>
<form id="editUser" enctype="multipart/formdata">
	<div class="form-group">
		<label for="userID" ></label>
		<input type="text" class="form-control" id="userID" name="userID" value="<%= user.userID %>" disabled>
	</div>
	<div class="form-group">
	  <label for="firstName" style="color: white; font-size: 20px">User's First Name:</label>
	  <input type="text" class="form-control" id="firstName" name="firstName" aria-describedby="userFirstNameInput" value="<%= user.firstName %>" required>
	</div>
	<div class="form-group">
		<label for="lastName" style="color: white; font-size: 20px">User's Last Name:</label>
		<input type="text" class="form-control" id="lastName" name="lastName" aria-describedby="userLastNameInput" value="<%= user.lastName %>" required>
	  </div>
	  <div class="form-group">
		  <label for="emailAddress" style="color: white; font-size: 20px">Email:</label>
		  <input type="text" class="form-control" id="emailAddress" name="email" aria-describedby="emailAddressInput" value="<%= user.emailAddress %>" required>
	</div>
	<div class="form-group">
		<label class="form-label" for="typePasswordX-2" style="color: white; font-size: 20px">Password:</label>
		<input type="password" id="typePasswordX-2" name="password" class="form-control" aria-describedby="passwordInput" />
  </div>
	<div class="form-group">
		<label class="form-label" for="typePasswordX-2" style="color: white; font-size: 20px">Confirm Password:</label>
		<input type="password" id="typePasswordX-2" name="passwordConfirm" class="form-control" aria-describedby="passwordConfirmInput" />
  </div>

		<button type="submit" class="btn btn-light btn-outline-dark">Submit</button>
	</form>

	<script src="/assets/getAllURLParams.js"></script>
	<script src="/assets/cookies.js"></script>
	<script src="/assets/axios.min.js"></script>


	<script>
		// taken from code_12, 04, signup.html
		const editUser=document.getElementById('editUser')
		editUser.addEventListener('submit',(e)=>{
			e.preventDefault();
			let userID=document.querySelectorAll('[name="userID"]')[0]
			let emailAddress=document.querySelectorAll('[name="email"]')[0]
			let firstName=document.querySelectorAll('[name="firstName"]')[0]
			let lastName=document.querySelectorAll('[name="lastName"]')[0]
			let password=document.querySelectorAll('[name="password"]')[0]
			let passwordConfirm=document.querySelectorAll('[name="passwordConfirm"]')[0]
			let urlportion=userID.value
			let passwordValue = password.value
			let passwordConfirmValue = passwordConfirm.value
			passwordValue = passwordValue.toString()
			passwordConfirmValue = passwordConfirmValue.toString()
			// there is probably a better way to disable whitespaces in all form but I don't have time atm.
			// trim all white spaces from password inputs.
			if(!passwordValue.length == false){
				passwordValue = passwordValue.trim()
				if(!passwordValue.length==false){
					// do nothing
				}
				else{
					// there were no actual characters in the input
					password.value = ""
				}
			}
			if(!passwordConfirmValue.length == false){
				passwordConfirmValue.trim()
				if(!passwordValue.length==false){
					// do nothing, password has more than spaces in it.
				}
				else{
					// there were no actual characters in the input.
					passwordConfirm.value = ""
				}
			}
			// check if password & password confirm are empty. If yes, don't update password.
			if(!passwordValue.length == true && !passwordConfirm.length == true){
				axios({
				method: 'put',
				url: '/user/edit/'+ urlportion,
				data: {
					userID:userID.value,
					firstName:firstName.value,
					lastName:lastName.value,
					emailAddress:emailAddress.value
				}
				})
				.then(function (response) {
					alert("Edit successful! Your previous password was not changed.")
					window.location = "/userDetail/" + urlportion
				})
				.catch(function (error) {
					console.log(error);
					alert("Failed Edit. Please review the data input and try again.")
				})
			}
				// pass the password along to check for match
			else{
				// check if passwords match.
				if(passwordConfirmValue === passwordValue){
					axios({
=======
<body style="background-color: #FFF0DF;">
	<div class="container">
		<div class="container"><p><h1>User Edit</h1> <a href="/users/" class="btn btn-light btn-outline-dark">Back to users index</a> | <a href="/userDetail/<%= user.userID %>" class="btn btn-light btn-outline-dark">Back to User Detail</a></p>
		<form id="editUser" enctype="multipart/formdata">
			<div class="form-group">
				<label for="userID" ></label>
				<input type="text" class="form-control" id="userID" name="userID" value="<%= user.userID %>" disabled>
			</div>
			<div class="form-group">
			<label for="firstName">User's First Name:</label>
			<input type="text" class="form-control" id="firstName" name="firstName" aria-describedby="userFirstNameInput" value="<%= user.firstName %>" required>
			</div>
			<div class="form-group">
				<label for="lastName">User's Last Name:</label>
				<input type="text" class="form-control" id="lastName" name="lastName" aria-describedby="userLastNameInput" value="<%= user.lastName %>" required>
			</div>
			<div class="form-group">
				<label for="emailAddress">Email:</label>
				<input type="text" class="form-control" id="emailAddress" name="email" aria-describedby="emailAddressInput" value="<%= user.emailAddress %>" required>
			</div>
			<div class="form-group">
				<label class="form-label" for="typePasswordX-2">Password:</label>
				<input type="password" id="typePasswordX-2" name="password" class="form-control" aria-describedby="passwordInput" />
		</div>
			<div class="form-group">
				<label class="form-label" for="typePasswordX-2">Confirm Password:</label>
				<input type="password" id="typePasswordX-2" name="passwordConfirm" class="form-control" aria-describedby="passwordConfirmInput" />
		</div>

				<button type="submit" name="userEditSubmit" class="btn btn-primary">Submit</button>
			</form>

			<script src="/assets/getAllURLParams.js"></script>
			<script src="/assets/cookies.js"></script>
			<script src="/assets/axios.min.js"></script>

			<!--Script for checking if current user is allowed to make changes.-->
			<script>
				window.addEventListener("load", (e) => {
					e.preventDefault();
					/*
						On window load, check if the current user is allowed to make edits to the information displayed.
						If user is not allowed to make changes, disable the buttons/links to the pages that would allow that.
						On the edit/add/delete pages, remove the ability to submit the data.
					*/

					// apparenlty this does not get autoformatted as a javascript object on client side. sadface.jpg
					let cookieJar = document.cookie
					// first split, temporary array.
					const myArray = cookieJar.split(";")
					// creating a js Object to use as a dictionary.
					let cookiePlate = {}
					// split fragment on = sign to get the CookieName and CookieValue
					myArray.forEach(fragment => {
						// getting rid of some excess spaces.
						fragment = fragment.trim()
						// do the splits splits splits
						let fragmentParts = fragment.split("=")
						
						// if the fragmentPart has stuff in it, write to object//dictionary.
						if(fragmentParts.length > 1)
						{
							let key = fragmentParts[0]
							let value = fragmentParts[1]
							
							cookiePlate[key] = value
						}
					});
					
					// Checks if current user is allowed to make changes to the data (as determined serverside).
					// If there is no "AllowedToChange" cookie, defaults to false.
					let allowedToChange = cookiePlate["EditCookie"] === "true"
					
					// Grabs the element to be changed by name.
					let userEditSubmit=document.querySelectorAll('[name="userEditSubmit"]')[0]
					// changes the elements to not do anything.
					if(allowedToChange == false)
					{
						userEditSubmit.disabled=true
					}
					else{
						// allowed to make changes, do nothing.
					}
				});
			</script>

			<!-- Script for handling an edit submission. -->
			<script> 
				// taken from code_12, 04, signup.html	
				const editUser=document.getElementById('editUser')
				editUser.addEventListener('submit',(e)=>{
					e.preventDefault();

					let userID=document.querySelectorAll('[name="userID"]')[0]
					let emailAddress=document.querySelectorAll('[name="email"]')[0]
					let firstName=document.querySelectorAll('[name="firstName"]')[0]
					let lastName=document.querySelectorAll('[name="lastName"]')[0]
					let password=document.querySelectorAll('[name="password"]')[0]
					let passwordConfirm=document.querySelectorAll('[name="passwordConfirm"]')[0]
					
					let urlportion=userID.value
					let passwordValue = password.value
					let passwordConfirmValue = passwordConfirm.value
					passwordValue = passwordValue.toString()
					passwordConfirmValue = passwordConfirmValue.toString()

					// there is probably a better way to disable whitespaces in all form but I don't have time atm.

					// trim all white spaces from password inputs.
					if(!passwordValue.length == false){
						passwordValue = passwordValue.trim()
						if(!passwordValue.length==false){
							// do nothing
						}
						else{
							// there were no actual characters in the input
							password.value = ""
						}
					}
					if(!passwordConfirmValue.length == false){
						passwordConfirmValue.trim()
						if(!passwordValue.length==false){
							// do nothing, password has more than spaces in it.
						}
						else{
							// there were no actual characters in the input.
							passwordConfirm.value = ""
						}
					}

					// check if password & password confirm are empty. If yes, don't update password.
					if(!passwordValue.length == true && !passwordConfirm.length == true){
						axios({
>>>>>>> 6d92c74ece40a0d52f1533321250a130eb133bb2
						method: 'put',
						url: '/user/edit/'+ urlportion,
						data: {
							userID:userID.value,
							firstName:firstName.value,
							lastName:lastName.value,
<<<<<<< HEAD
							emailAddress:emailAddress.value,
							password:password.value
						},
						validateStatus:()=>true
					})
					.then(function (response) {
						alert("Edit successful! Your password has been updated.")
						window.location = "/userDetail/" + urlportion
					})
					.catch(function (error) {
						console.log(error);
					});
				}
				// if password and passwordconfirm do not match
				else{
					alert("Passwords do not match. Please re-type passwords.")
					return
				}
				return
			}
		})
	</script>
=======
							emailAddress:emailAddress.value
						}
						})
						.then(function (response) {
							alert("Edit successful! Your previous password was not changed.")
							window.location = "/userDetail/" + urlportion
						})
						.catch(function (error) {
							console.log(error);
							alert("Failed Edit. Please review the data input and try again.")
						})

					}
						// pass the password along to check for match
					else{
						// check if passwords match.
						if(passwordConfirmValue === passwordValue){
							
							axios({
								method: 'put',
								url: '/user/edit/'+ urlportion,
								data: {
									userID:userID.value,
									firstName:firstName.value,
									lastName:lastName.value,
									emailAddress:emailAddress.value,
									password:password.value
								},
								validateStatus:()=>true
							})
							.then(function (response) {
								alert("Edit successful! Your password has been updated.")
								window.location = "/userDetail/" + urlportion
							})
							.catch(function (error) {
								console.log(error);
							});
						}
						// if password and passwordconfirm do not match
						else{
							alert("Passwords do not match. Please re-type passwords.")
							return
						}
						return
					}
				})
			</script> 
		</div>
	</div>

>>>>>>> 6d92c74ece40a0d52f1533321250a130eb133bb2
</body>

<footer>
    <%- include('../partials/footer') %>
</footer>
<<<<<<< HEAD
</html>
=======
</html>
>>>>>>> 6d92c74ece40a0d52f1533321250a130eb133bb2
